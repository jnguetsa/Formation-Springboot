services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_DB: formation1
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d formation1"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/formation1
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
    ports:
      - "8080:8080"
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
